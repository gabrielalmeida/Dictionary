import React, {Component} from 'react';import ReactNative from 'react-native';import { List, ListItem, Icon } from 'react-native-elements';const styles = require('../styles.js');const firebase = require('firebase');const { View, TouchableHighlight, Text, ListView, Switch, Button, Share } = ReactNative;class WordItem extends Component {    constructor(props) {    super(props);    this.onPressIcon = this.onPressIcon.bind(this);    this.state= {      value_of_likes: 0,      trueSwitchIsOn: false,      };    }    componentWillMount() {      this.createDataSource(this.state.value_of_likes);    }    createDataSource(value_of_likes) {      const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });      this.dataSource = ds.cloneWithRows(value_of_likes);    }    onSwitchChange(_key){    const{trueSwitchIsOn}=this.state;      switch (this.state.trueSwitchIsOn){        case false:          return(            <Button onClick={this.onPressIcon(_key)}>            {this.setState({trueSwitchIsOn: true})}            </Button>            );        case true:          return(          <Button onClick={this.onUnPressIcon(_key)}>            {this.setState({trueSwitchIsOn: false})}            </Button>            );          }      }            onPressIcon(word){            const{trueSwitchIsOn}=this.state;                        //Initialize Firebase                        var config = {                        apiKey: "AIzaSyDWedZY1svNHxPUi2ReQJTlCf9Q60407E8",                        authDomain: "streetfrench-a84df.firebaseapp.com",                        databaseURL: "https://streetfrench-a84df.firebaseio.com"                        };                        var ref = firebase.database().ref();                        let childItem = word+"/likes";                        //Create reference                        var likes_words = ref.child("items").child(word).child("likes");                              // Increment by One                               likes_words.transaction(function(currentLike) {                                      return currentLike + 1;                                });                               //Sync Object Changes                               likes_words.on('value', snapshot => {                                      value_of_likes = snapshot.val()                                });                               this.setState({ value_of_likes: value_of_likes});                               this.setState({trueSwitchIsOn : true});                               console.log(value_of_likes)                               console.log({value_of_likes})                               console.log(this.state.value_of_likes)                      }          onUnPressIcon(word){            const{trueSwitchIsOn}=this.state;                        //Initialize Firebase                        var config = {                        apiKey: "AIzaSyDWedZY1svNHxPUi2ReQJTlCf9Q60407E8",                        authDomain: "streetfrench-a84df.firebaseapp.com",                        databaseURL: "https://streetfrench-a84df.firebaseio.com"                        };                        var ref = firebase.database().ref();                        let childItem = word+"/likes";                        //Create reference                        var likes_words = ref.child("items").child(word).child("likes");                              // Increment by One                               likes_words.transaction(function(currentLike) {                                      return currentLike - 1;                                });                               //Sync Object Changes                               likes_words.on('value', snapshot => {                                      value_of_likes = snapshot.val()                                });                               this.setState({ value_of_likes: value_of_likes});                               this.setState({trueSwitchIsOn : false});                               console.log(value_of_likes)                               console.log({value_of_likes})                               console.log(this.state.value_of_likes)                      }onShare(word) {  const {english, english_erudite, likes, _key} = this.props.navigation.state.params;  Share.share({    message: 'StreetFrench : check out this word!',    url: 'http://bam.tech',    title: 'Wow, did you see that?'  }, {    // Android only:    dialogTitle: 'Share BAM goodness',    // iOS only:    excludedActivityTypes: [      'com.apple.UIKit.activity.PostToTwitter'    ]  })}render() {    const {english, english_erudite, likes, _key} = this.props.navigation.state.params;    return (        <TouchableHighlight>            <View style={styles.li}>                <Text style={styles.liText} >{english}</Text>                <Text style={styles.liText} >{english_erudite}</Text>                <Icon                raised                name='heartbeat'                type='font-awesome'                color='#f50'                onPress={()=>{this.onPressIcon(_key)}}                />               <ListView               enableEmptySections               dataSource={this.dataSource}               renderRow={this.renderRow}               />                <Text>                 {this.state.value_of_likes !== 0 ? <Text>{this.state.value_of_likes} likes</Text> : <Text>{likes} likes</Text>}                </Text>                <Switch                    onValueChange={(value)=>this.onSwitchChange(_key)}                    style={{marginBottom: 10}}                    value={this.state.trueSwitchIsOn}                />                 <Icon                name='facebook'                type='font-awesome'                color='#417fa4'                size='14'                onPress={()=>{this.onShare(_key)}}                />           </View>        </TouchableHighlight>    );}}export default WordItem;